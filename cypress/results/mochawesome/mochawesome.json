{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2021-02-01T03:38:30.115Z",
    "end": "2021-02-01T03:38:32.023Z",
    "duration": 1908,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "df3b22a6-8549-4d61-8b01-bcf274a72f00",
      "title": "",
      "fullFile": "cypress\\integration\\api.test.second.specs.js",
      "file": "cypress\\integration\\api.test.second.specs.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "000e0302-1ebf-47da-8130-62074621ab06",
          "title": "api testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "delete feed",
              "fullTitle": "api testing delete feed",
              "timedOut": null,
              "duration": 553,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var articleBody = {\n  article: {\n    tagList: [],\n    title: \"test automations\",\n    description: \"article on test automations\",\n    body: \"this is regarding how to perform test automations in a corporate environment\"\n  }\n};\ncy.get(\"@token\").then(function (token) {\n  cy.request({\n    url: Cypress.env(\"apiUrl\") + \"articles/\",\n    headers: {\n      Authorization: \"Token \" + token\n    },\n    method: \"POST\",\n    body: articleBody\n  }).then(function (res) {\n    expect(res.status).to.equal(200);\n    cy.contains(\"Global Feed\").click();\n    cy.get(\".article-preview\").contains(\"test automations\").click();\n    cy.contains(\"Delete Article\").click();\n    cy.request({\n      url: Cypress.env(\"apiUrl\") + \"articles?limit=10&offset=0\",\n      headers: {\n        Authorization: \"Token \" + token\n      },\n      method: \"GET\"\n    }).its(\"body\").then(function (body) {\n      expect(body.articles[0].title).to.be.not.equal(\"test automations\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:4200/undefinedusers/login\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:4200/undefinedusers/login\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.3.0 Chrome/87.0.4280.141 Electron/11.2.0 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 70\n}\nBody: {\"user\":{\"email\":\"rijuvijayan@gmail.com\",\"password\":\"testautomation\"}}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 404 - Not Found\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"content-security-policy\": \"default-src 'none'\",\n  \"x-content-type-options\": \"nosniff\",\n  \"content-type\": \"text/html; charset=utf-8\",\n  \"content-length\": \"160\",\n  \"date\": \"Mon, 01 Feb 2021 03:38:31 GMT\",\n  \"connection\": \"keep-alive\"\n}\nBody: <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /undefinedusers/login</pre>\n</body>\n</html>\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `api testing`",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:4200/undefinedusers/login\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:4200/undefinedusers/login\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.3.0 Chrome/87.0.4280.141 Electron/11.2.0 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 70\n}\nBody: {\"user\":{\"email\":\"rijuvijayan@gmail.com\",\"password\":\"testautomation\"}}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 404 - Not Found\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"content-security-policy\": \"default-src 'none'\",\n  \"x-content-type-options\": \"nosniff\",\n  \"content-type\": \"text/html; charset=utf-8\",\n  \"content-length\": \"160\",\n  \"date\": \"Mon, 01 Feb 2021 03:38:31 GMT\",\n  \"connection\": \"keep-alive\"\n}\nBody: <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /undefinedusers/login</pre>\n</body>\n</html>\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `api testing`\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:159046:21\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10609:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8544:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8601:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:8646:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:8726:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5316:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5309:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5325:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5195:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\support\\index.js:136:6)",
                "diff": null
              },
              "uuid": "24fd8a8f-02a7-404c-9e44-e36a401341f4",
              "parentUUID": "000e0302-1ebf-47da-8130-62074621ab06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "24fd8a8f-02a7-404c-9e44-e36a401341f4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 553,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}